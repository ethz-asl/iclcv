# -*-mode: Makefile;-*-  ;; Have EMACS always use makefile-mode for this file.

######################################################################
## Convenience Functions  ############################################
######################################################################
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
notify_support = $(if ${ICL_SUPPRESS_DEPENDENCY_MESSAGES},, \
		 $(info | $(1) support enabled: $(2)))

notify_not_found = $(if ${ICL_SUPPRESS_DEPENDENCY_MESSAGES},, \
		$(info | $(1) not found in:    $(2) (support disabled)))

$(info  +-----------------------------------------------------------------------)
else
notify_support =
notify_not_found =
endif


######################################################################
## Dependencies ######################################################
######################################################################

# IPP
IPP_ROOT ?= /vol/vision/IPP
ifeq "${OS_TYPE}" "linux"

ifeq "$(wildcard $(IPP_ROOT)/5.2/sharedlib/libipp*.so)" ""
$(call notify_not_found,IPP 5.2         ,${IPP_ROOT}/5.2/sharedlib);
else
$(call notify_support,IPP 5.2         ,${IPP_ROOT}/5.2/sharedlib)
CDEFINES:=$(CDEFINES) -DWITH_IPP_OPTIMIZATION
CPPDEFINES:=${CPPDEFINES} -DWITH_IPP_OPTIMIZATION
HAVE_IPP:=TRUE
endif

endif # linux
ifeq "${OS_TYPE}" "macosx"

ifeq "$(wildcard $(IPP_ROOT)/Intel_IPP.framework/Libraries/libipp*.dylib)" ""
$(call notify_not_found,IPP-Framework  ,${IPP_ROOT}/Intel_IPP/Libraries);
else
$(call notify_support,IPP IPP-Framework  ,${IPP_ROOT}/Intel_IPP/Libraries)
CDEFINES:=$(CDEFINES) -DWITH_IPP_OPTIMIZATION
CPPDEFINES:=$(CPPDEFINES) -DWITH_IPP_OPTIMIZATION
HAVE_IPP:=TRUE
endif

endif # macosx


# QT
QTDIR ?= /vol/qt/4.3
ifeq "$(shell $(QTDIR)/bin/qmake --version 2>&1 | grep 'Using Qt version 4.')" ""
$(call notify_not_found,Qt              ,${QTDIR}/lib);
else
$(call notify_support,Qt              ,${QTDIR}/lib);
HAVE_QT:=TRUE
endif

# libJPEG
LIBJPEG_ROOT ?= /usr
ifeq "$(wildcard ${LIBJPEG_ROOT}/lib/libjpeg.*)" ""
$(call notify_not_found,libjpeg.so      ,${LIBJPEG_ROOT}/lib);
else
$(call notify_support,libjpeg.so      ,${LIBJPEG_ROOT}/lib);
CDEFINES:=$(CDEFINES) -DWITH_JPEG_SUPPORT
CPPDEFINES:=$(CPPDEFINES) -DWITH_JPEG_SUPPORT
HAVE_LIBJPEG:=TRUE
endif

# zlib
ZLIB_ROOT ?= /usr
ZLIB_SOMETHING_IS_MISSING=FALSE
ifeq "$(wildcard ${ZLIB_ROOT}/lib/libz.*)" ""
ZLIB_SOMETHING_IS_MISSING=TRUE
endif
ifeq "$(wildcard ${ZLIB_ROOT}/include/zlib.h)" ""
ZLIB_SOMETHING_IS_MISSING=TRUE
endif
ifeq "$(ZLIB_SOMETHING_IS_MISSING)" "TRUE"
$(call notify_not_found,libz.so/zlib.h  ,${ZLIB_ROOT}/[lib|include]);
else
$(call notify_support,libz.so/zlib.h  ,${ZLIB_ROOT}/[lib|include]);
CDEFINES:=$(CDEFINES) -DWITH_ZLIB_SUPPORT
CPPDEFINES:=$(CPPDEFINES) -DWITH_ZLIB_SUPPORT
HAVE_ZLIB:=TRUE
endif

# libdc1394
LIBDC_ROOT ?= /vol/video
ifeq "$(wildcard ${LIBDC_ROOT}/lib/libdc1394.*2*)" ""
$(call notify_not_found,libdc1394.so.2x ,${LIBDC_ROOT}/lib);
HAVE_LIBDC:=
else
$(call notify_support,libdc1394.so.2x ,${LIBDC_ROOT}/lib);
HAVE_LIBDC:=TRUE
endif

# libraw1394
LIBRAW_ROOT ?= /vol/video
ifeq "$(wildcard ${LIBRAW_ROOT}/lib/libraw1394.so*)" ""
$(call notify_not_found,libraw1394.so   ,${LIBRAW_ROOT}/lib);
HAVE_LIBRAW:=
else
$(call notify_support,libraw1394.so   ,${LIBRAW_ROOT}/lib);
HAVE_LIBRAW:=TRUE
endif

# SVS
SVS_ROOT ?= /vol/vision/SVS/4.2
ifeq "$(wildcard ${SVS_ROOT}/bin/libsvs.so)" ""
$(call notify_not_found,libsvs.so       ,${SVS_ROOT}/bin)
HAVE_SVS:=
else
$(call notify_support,libsvs.so       ,${SVS_ROOT}/bin)
HAVE_SVS:=TRUE
endif

# unicap
UNICAP_ROOT ?= /vol/video
ifeq "$(wildcard ${UNICAP_ROOT}/lib/libunicap*.so)" ""
$(call notify_not_found,libunicap.so    ,${UNICAP_ROOT}/lib)
HAVE_UNICAP:=
else
$(call notify_support,libunicap.so    ,${UNICAP_ROOT}/lib)
HAVE_UNICAP:=TRUE
endif

#XCF
XCF_ROOT ?= /vol/xcf
ifeq "$(wildcard ${XCF_ROOT}/lib/libxcf*.so)" ""
$(call notify_not_found,libxcf.so       ,${XCF_ROOT}/lib)
HAVE_XCF:=
else
$(call notify_support,libxcf.so       ,${XCF_ROOT}/lib)
HAVE_XCF:=TRUE
endif


ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
$(info  +-----------------------------------------------------------------------)
endif

# ICL dependency check done
export ICL_DEPENDENCYS_CHECKED=TRUE
