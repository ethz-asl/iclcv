# -*-mode: Makefile;-*-  ;; Have EMACS always use makefile-mode for this file.

# IPP
IPP_ROOT ?= /vol/vision/IPP
ifeq "${OS_TYPE}" "linux"

ifeq "$(wildcard $(IPP_ROOT)/5.2/sharedlib/libipp*.so)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "IPP 5.2 is not available. Its usage is switched off.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "IPP support enabled: ${IPP_ROOT}/5.2/sharedlib")
endif
endif
CDEFINES:=$(CDEFINES) -DWITH_IPP_OPTIMIZATION
CPPDEFINES:=${CPPDEFINES} -DWITH_IPP_OPTIMIZATION
HAVE_IPP:=TRUE
endif

endif # linux


ifeq "${OS_TYPE}" "macosx"

ifeq "$(wildcard $(IPP_ROOT)/Intel_IPP.framework/Libraries/libipp*.dylib)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "IPP is not available. Its usage is switched off.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "IPP support enabled: ${IPP_ROOT}/lib")
endif
endif
CDEFINES:=$(CDEFINES) -DWITH_IPP_OPTIMIZATION
CPPDEFINES:=$(CPPDEFINES) -DWITH_IPP_OPTIMIZATION
HAVE_IPP:=TRUE
endif

endif # macosx

# libJPEG
LIBJPEG_ROOT ?= /usr
ifeq "$(wildcard ${LIBJPEG_ROOT}/lib/libjpeg.*)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "libjpeg is not available. Its usage is switched off.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "JPEG support enabled: ${LIBJPEG_ROOT}/lib")
endif
endif
CDEFINES:=$(CDEFINES) -DWITH_JPEG_SUPPORT
CPPDEFINES:=$(CPPDEFINES) -DWITH_JPEG_SUPPORT
HAVE_LIBJPEG:=TRUE
endif

# QT
QTDIR ?= /vol/qt/4.3
ifeq "$(shell $(QTDIR)/bin/qmake --version 2>&1 | grep 'Using Qt version 4.')" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "Qt version 4.3 is not available. Qt-specific targets are not built.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "Qt support enabled: ${QTDIR}/lib")
endif
endif
HAVE_QT:=TRUE
endif

# libdc1394
LIBDC_ROOT ?= /vol/video
ifeq "$(wildcard ${LIBDC_ROOT}/lib/libdc1394.*2*)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "libdc1394.so.2x was not found in ${LIBDC_ROOT}/lib. DCGrabber support disabled.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "LIBDC support enabled: ${LIBDC_ROOT}/lib")
endif
endif
HAVE_LIBDC:=TRUE
endif

# libraw1394
LIBRAW_ROOT ?= /vol/video
ifeq "$(wildcard ${LIBRAW_ROOT}/lib/libraw1394.so*)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "libraw1394.so was not found in ${LIBRAW_ROOT}/lib. DCGrabber support disabled.")
endif
endif
HAVE_LIBDC:=
else
ifeq "${ICL_DEPENDENCYS_CHECKED}${HAVE_LIBDC}" "TRUE"
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "libraw support enabled: ${LIBRAW_ROOT}/lib")
endif
endif
endif

# SVS
SVS_ROOT ?= /vol/vision/SVS/4.2
ifeq "$(wildcard ${SVS_ROOT}/bin/libsvs.so)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "SVS library is not available. SVS specific targets are not built.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "SVS support enabled: ${SVS_ROOT}/lib")
endif
endif
HAVE_SVS:=TRUE
endif

# unicap
UNICAP_ROOT ?= /vol/video
ifeq "$(wildcard ${UNICAP_ROOT}/lib/libunicap*.so)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "libunicap.so was not found in ${UNICAP_ROOT}/lib. Unicap support disabled.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "Unicap support enabled: ${UNICAP_ROOT}/lib")
endif
endif
HAVE_UNICAP:=TRUE
endif

#XCF
XCF_ROOT ?= /vol/xcf
ifeq "$(wildcard ${XCF_ROOT}/lib/libxcf*.so)" ""
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "libxcf.so was not found in ${XCF_ROOT}/lib. XCF support disabled.")
endif
endif
else
ifeq "${ICL_DEPENDENCYS_CHECKED}" ""
ifeq "${ICL_SUPPRESS_DEPENDENCY_MESSAGES}" ""
$(warning "XCF support enabled: ${XCF_ROOT}/lib")
endif
endif
HAVE_XCF:=TRUE
endif

# ICL dependency check done
export ICL_DEPENDENCYS_CHECKED=TRUE
